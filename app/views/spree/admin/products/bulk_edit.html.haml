- content_for :page_title do
  = "Bulk Edit Products"

- content_for :page_actions do
  %div{ :class => "toolbar", 'data-hook' => "toolbar" }
    %ul{ :class => "actions header-action-links inline-menu" }
      %li#new_product_link
        = button_link_to t(:new_product), new_object_url, { :remote => true, :icon => 'icon-plus', :id => 'admin_new_product' }

= render :partial => 'spree/admin/shared/product_sub_menu'

%div#new_product(data-hook)


=admin_inject_producers
=admin_inject_taxons
%div{ 'ng-app' => 'ofn.admin', 'ng-controller' => 'AdminProductEditCtrl', 'ng-init' => "initialise('#{@spree_api_key}');loading=true;" }
  %div{ 'ng-show' => '!spree_api_key_ok' }
    {{ api_error_msg }}
  %div.sixteen.columns.alpha.loading{ 'ng-show' => 'loading' }
    %h4 Loading Products...
  %div.sixteen.columns.alpha{ 'ng-show' => '!loading && products.length == 0' }
    %h4{ :style => 'color:red;' } No matching products found.
  %div.sixteen.columns.alpha{ 'ng-hide' => 'loading || products.length == 0' }
    %div.quick_search{ :class => "four columns alpha" }
      %label{ :for => 'quick_filter' }
      %br
      %input.search{ :class => "four columns alpha", 'ng-model' => 'query', :name => "quick_filter", :type => 'text', 'placeholder' => 'Quick Search' }
    .filter_select{ :class => "three columns" }
      %label{ :for => 'producer_filter' }Producer
      %br
      %select{ :class => "three columns alpha", :id => 'producer_filter', 'ofn-select2-min-search' => 5, 'ng-model' => 'producerFilter', 'ng-options' => 'producer.id as producer.name for producer in producers' }
    .filter_select{ :class => "three columns" }
      %label{ :for => 'taxon_filter' }Category
      %br
      %select{ :class => "three columns alpha", :id => 'category_filter', 'ofn-select2-min-search' => 5, 'ng-model' => 'categoryFilter', 'ng-options' => 'taxon.id as taxon.name for taxon in taxons'}
    .filter_clear{ :class => "two columns omega" }
      %label{ :for => 'clear_all_filters' }
      %br
      %input.fullwidth{ :type => 'button', :id => 'clear_all_filters', :value => "Clear All", 'ng-click' => "resetSelectFilters()" }
    %div{ :class => "one column" } &nbsp;
    %div{ :class => "three columns omega" }
      %label{ }
      %br
      %div.ofn_drop_down{ 'ng-controller' => "DropDownCtrl", :id => "columns_dropdown", 'ofn-drop-down' => true, :style => 'float:right;' }
        %span{ :class => 'icon-reorder' } &nbsp; Columns
        %span{ 'ng-class' => "expanded && 'icon-caret-up' || !expanded && 'icon-caret-down'" }
        %div.menu{ 'ng-show' => "expanded" }
          %div.menu_item{ :class => "three columns alpha", 'ng-repeat' => "column in columns",  'ofn-toggle-column' => true }
            %span{ :class => 'one column alpha', :style => 'text-align: center'} {{ column.visible && "&#10003;" || !column.visible && "&nbsp;" }}
            %span{ :class => 'two columns omega' } {{column.name }}
    %table.index#listing_products.bulk{ "infinite-scroll" => "incrementLimit()", "infinite-scroll-distance" => "1" }
      %colgroup
        %col.actions
        %col.producer{ 'style' => 'width: 14%;', 'ng-show' => 'columns.producer.visible' }
        %col.name{ 'style' => 'width: 20%;', 'ng-show' => 'columns.name.visible' }
        %col.unit{ 'style' => 'width: 14%;', 'ng-show' => 'columns.unit.visible' }
        %col.display_as{ 'style' => 'width: 12%;', 'ng-show' => 'columns.unit.visible' }
        %col.price{ 'style' => 'width: 10%;', 'ng-show' => 'columns.price.visible'}
        %col.on_hand{ 'style' => 'width: 10%;', 'ng-show' => 'columns.on_hand.visible' }
        %col.taxons{ 'ng-show' => 'columns.taxons.visible' }
        %col.available_on{ 'ng-show' => 'columns.available_on.visible' }
        %col.actions
        %col.actions
        %col.actions

      %thead
        %tr
          %th.left-actions
          %th.producer{ 'ng-show' => 'columns.producer.visible' } Producer
          %th.name{ 'ng-show' => 'columns.name.visible' } Name
          %th.unit{ 'ng-show' => 'columns.unit.visible' } Unit / Value
          %th.display_as{ 'ng-show' => 'columns.unit.visible' } Display As
          %th.price{ 'ng-show' => 'columns.price.visible' } Price
          %th.on_hand{ 'ng-show' => 'columns.on_hand.visible' } On Hand
          %th.taxons{ 'ng-show' => 'columns.taxons.visible' } Taxons
          %th.available_on{ 'ng-show' => 'columns.available_on.visible' } Av. On
          %th.actions
          %th.actions
          %th.actions
      %tbody{ 'ng-repeat' => 'product in filteredProducts = ( products | filter:query | filter:{producer: producerFilter}:true | filter:{category: categoryFilter}:true | limitTo:limit )', 'ng-class-even' => "'even'", 'ng-class-odd' => "'odd'" }
        %tr.product{ :id => "p_{{product.id}}" }
          %td.left-actions
            %a{ 'ofn-toggle-variants' => 'true', :class => "view-variants icon-chevron-right", 'ng-show' => 'hasVariants(product)' }
            %a{ :class => "add-variant icon-plus-sign", 'ng-click' => "addVariant(product)", 'ng-show' => "!hasVariants(product) && hasUnit(product)" }
          %td.producer{ 'ng-show' => 'columns.producer.visible' }
            %select.select2{ 'ng-model' => 'product.producer', :name => 'producer', 'ofn-track-product' => 'producer', 'ng-options' => 'producer.id as producer.name for producer in producers' }
          %td.name{ 'ng-show' => 'columns.name.visible' }
            %input{ 'ng-model' => "product.name", :name => 'product_name', 'ofn-track-product' => 'name', :type => 'text' }
          %td.unit{ 'ng-show' => 'columns.unit.visible' }
            %select.select2{ 'ng-model' => 'product.variant_unit_with_scale', :name => 'variant_unit_with_scale', 'ofn-track-product' => 'variant_unit_with_scale', 'ng-options' => 'unit[1] as unit[0] for unit in variant_unit_options' }
              %option{'value' => '', 'ng-hide' => "hasVariants(product) && hasUnit(product)"}
            %input{ 'ng-model' => 'product.master.unit_value_with_description', :name => 'master_unit_value_with_description', 'ofn-track-master' => 'unit_value_with_description', :type => 'text', :placeholder => 'value', 'ng-show' => "!hasVariants(product) && hasUnit(product)", 'ofn-maintain-unit-scale' => true }
            %input{ 'ng-model' => 'product.variant_unit_name', :name => 'variant_unit_name', 'ofn-track-product' => 'variant_unit_name', :placeholder => 'unit', 'ng-show' => "product.variant_unit_with_scale == 'items'", :type => 'text' }
          %td.display_as{ 'ng-show' => 'columns.unit.visible' }
            %input{ 'ofn-display-as' => 'product.master', name: 'display_as', 'ofn-track-master' => 'display_as', type: 'text', placeholder: '{{ placeholder_text }}', ng: { hide: 'hasVariants(product)', model: 'product.master.display_as' } }
          %td.price{ 'ng-show' => 'columns.price.visible' }
            %input{ 'ng-model' => 'product.price', 'ofn-decimal' => :true, :name => 'price', 'ofn-track-product' => 'price', :type => 'text', 'ng-hide' => 'hasVariants(product)' }
          %td.on_hand{ 'ng-show' => 'columns.on_hand.visible' }
            %span{ 'ng-bind' => 'product.on_hand', :name => 'on_hand', 'ng-show' => '!hasOnDemandVariants(product) && (hasVariants(product) || product.on_demand)' }
            %input.field{ 'ng-model' => 'product.on_hand', :name => 'on_hand', 'ofn-track-product' => 'on_hand', 'ng-hide' => 'hasVariants(product) || product.on_demand', :type => 'number' }
          %td{ 'ng-if' => 'columns.taxons.visible' }
            %input.fullwidth{ :type => 'text', 'ng-model' => 'product.taxon_ids', 'ofn-taxon-autocomplete' => '', 'ofn-track-product' => 'taxon_ids' }
          %td.available_on{ 'ng-show' => 'columns.available_on.visible' }
            %input{ 'ng-model' => 'product.available_on', :name => 'available_on', 'ofn-track-product' => 'available_on', 'datetimepicker' => 'product.available_on', type: "text" }
          %td.actions
            %a{ 'ng-click' => 'editWarn(product)', :class => "edit-product icon-edit no-text" }
          %td.actions
            %a{ 'ng-click' => 'cloneProduct(product)', :class => "clone-product icon-copy no-text" }
          %td.actions
            %a{ 'ng-click' => 'deleteProduct(product)', :class => "delete-product icon-trash no-text" }
        %tr.variant{ :id => "v_{{variant.id}}", 'ng-repeat' => 'variant in product.variants', 'ng-show' => 'displayProperties[product.id].showVariants', 'ng-class-even' => "'even'", 'ng-class-odd' => "'odd'" }
          %td.left-actions
            %a{ :class => "variant-item icon-caret-right", 'ng-hide' => "$last" }
            %a{ :class => "add-variant icon-plus-sign", 'ng-click' => "addVariant(product)", 'ng-show' => "$last" }
          %td{ 'ng-show' => 'columns.producer.visible' }
          %td{ 'ng-show' => 'columns.name.visible' }
            %input{ 'ng-model' => 'variant.display_name', :name => 'variant_display_name', 'ofn-track-variant' => 'display_name', :type => 'text', placeholder: "{{ product.name }}" }
          %td.unit_value{ 'ng-show' => 'columns.unit.visible' }
            %input{ 'ng-model' => 'variant.unit_value_with_description', :name => 'variant_unit_value_with_description', 'ofn-track-variant' => 'unit_value_with_description', :type => 'text', 'ofn-maintain-unit-scale' => true }
          %td.display_as{ 'ng-show' => 'columns.unit.visible' }
            %input{ 'ofn-display-as' => 'variant', 'ng-model' => 'variant.display_as', name: 'variant_display_as', 'ofn-track-variant' => 'display_as', type: 'text', placeholder: '{{ placeholder_text }}' }
          %td{ 'ng-show' => 'columns.price.visible' }
            %input{ 'ng-model' => 'variant.price', 'ofn-decimal' => :true, :name => 'variant_price', 'ofn-track-variant' => 'price', :type => 'text' }
          %td{ 'ng-show' => 'columns.on_hand.visible' }
            %input.field{ 'ng-model' => 'variant.on_hand', 'ng-change' => 'updateOnHand(product)', :name => 'variant_on_hand', 'ng-hide' => 'variant.on_demand', 'ofn-track-variant' => 'on_hand', :type => 'number' }
            %span{ 'ng-bind' => 'variant.on_hand', :name => 'variant_on_hand', 'ng-show' => 'variant.on_demand' }
          %td{ 'ng-show' => 'columns.taxons.visible' }
          %td{ 'ng-show' => 'columns.available_on.visible' }
          %td.actions
            %a{ 'ng-click' => 'editWarn(product,variant)', :class => "edit-variant icon-edit no-text", 'ng-show' => "variantSaved(variant)" }
          %td.actions
          %td.actions
            %a{ 'ng-click' => 'deleteVariant(product,variant)', :class => "delete-variant icon-trash no-text" }
    %input{ :type => 'button', :value => 'Update', 'ng-click' => 'submitProducts()'}
    %span{ id: "update-status-message", 'ng-style' => 'updateStatusMessage.style' }
      {{ updateStatusMessage.text }}
