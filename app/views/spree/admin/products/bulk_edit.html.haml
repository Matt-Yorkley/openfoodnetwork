- content_for :page_title do
  = "Bulk Edit Products"

- content_for :page_actions do
  %div{ :class => "toolbar", 'data-hook' => "toolbar" }
    %ul{ :class => "actions header-action-links inline-menu" }
      %li#new_product_link
        = button_link_to t(:new_product), new_object_url, { :remote => true, :icon => 'icon-plus', :id => 'admin_new_product' }

= render :partial => 'spree/admin/shared/product_sub_menu'

%div#new_product(data-hook)

%div{ 'ng-app' => 'bulk_product_update', 'ng-controller' => 'AdminBulkProductsCtrl', 'ng-init' => 'refreshSuppliers(); refreshProducts();' }
  %div.options
    Filter Results:
    %input.search{ 'ng-model' => 'query', :type => 'text', 'placeholder' => 'Search Value' }
  %br.clear
  %br.clear
  %table.index#listing_products
    %thead
      %tr
        %th.actions
        %th.firstcol Name
        %th Supplier
        %th Price
        %th On Hand
        %th Av. On
        %th.actions
    %tbody{ 'ng-repeat' => 'product in products | filter:query', 'ng-class-even' => "'even'", 'ng-class-odd' => "'odd'" }
      %tr.product
        %td.actions
          %a{ 'ng-toggle-variants' => 'true', :class => "view-variants icon-chevron-right", 'ng-show' => 'hasVariants(product)' }
        %td.firstcol
          %input{ 'ng-model' => "product.name", :name => 'product_name', 'ng-track-product' => 'name', :type => 'text' }
        %td
          %select.select2{ 'ng-model' => 'product.supplier', :name => 'supplier', 'ng-track-product' => 'supplier', 'ng-options' => 's.name for s in suppliers' }
        %td
          %input{ 'ng-model' => 'product.price', 'ng-decimal' => :true, :name => 'price', 'ng-track-product' => 'price', :type => 'text' }
        %td
          %span{ 'ng-bind' => 'product.on_hand', :name => 'on_hand', 'ng-show' => 'hasVariants(product)' }
          %input.field{ 'ng-model' => 'product.on_hand', :name => 'on_hand', 'ng-track-product' => 'on_hand', 'ng-show' => '!hasVariants(product)', :type => 'number' }
        %td
          %input{ 'ng-model' => 'product.available_on', :name => 'available_on', 'ng-track-product' => 'available_on', :type => 'text' }
        %td.actions
          %a{ 'ng-click' => 'editWarn(product)', :class => "edit-product icon-edit no-text" }
          %a{ 'ng-click' => 'cloneProduct(product)', :class => "clone-product icon-copy no-text" }
          %a{ 'ng-click' => 'deleteProduct(product)', :class => "delete-product icon-trash no-text" }
      %tr.variant{ 'ng-repeat' => 'variant in product.variants', 'ng-show' => 'displayProperties[product.id].showVariants', 'ng-class-even' => "'even'", 'ng-class-odd' => "'odd'" }
        %td.actions
          %a{ :class => "variant-item icon-caret-right" }
        %td.firstcol
          {{ variant.options_text }}
        %td
        %td
          %input{ 'ng-model' => 'variant.price', 'ng-decimal' => :true, :name => 'variant_price', 'ng-track-variant' => 'price', :type => 'text' }
        %td
          %input.field{ 'ng-model' => 'variant.on_hand', 'ng-change' => 'updateOnHand(product)', :name => 'variant_on_hand', 'ng-track-variant' => 'on_hand', :type => 'number' }
        %td
        %td.actions
          %a{ 'ng-click' => 'editWarn(product,variant)', :class => "edit-variant icon-edit no-text" }
          %a{ 'ng-click' => 'deleteVariant(product,variant)', :class => "delete-variant icon-trash no-text" }
  %input{:type => 'button', :value => 'Update', 'ng-click' => 'prepareProductsForSubmit()'}
  %span{ id: "update-status-message", 'ng-style' => 'updateStatusMessage.style' }
    {{ updateStatusMessage.text }}